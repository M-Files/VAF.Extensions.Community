//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MFiles.VAF.Extensions.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Licensing {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Licensing() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MFiles.VAF.Extensions.Resources.Licensing", typeof(Licensing).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application is marked as compatible with M-Files Multi-Server Mode..
        /// </summary>
        internal static string ApplicationDetailsPanel_ApplicationIsMultiServerModeCompatible {
            get {
                return ResourceManager.GetString("ApplicationDetailsPanel_ApplicationIsMultiServerModeCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application is not marked as compatible with M-Files Multi-Server Mode..
        /// </summary>
        internal static string ApplicationDetailsPanel_ApplicationIsNotMultiServerModeCompatible {
            get {
                return ResourceManager.GetString("ApplicationDetailsPanel_ApplicationIsNotMultiServerModeCompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright:.
        /// </summary>
        internal static string ApplicationDetailsPanel_RowHeaders_Copyright {
            get {
                return ResourceManager.GetString("ApplicationDetailsPanel_RowHeaders_Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Publisher:.
        /// </summary>
        internal static string ApplicationDetailsPanel_RowHeaders_Publisher {
            get {
                return ResourceManager.GetString("ApplicationDetailsPanel_RowHeaders_Publisher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version:.
        /// </summary>
        internal static string ApplicationDetailsPanel_RowHeaders_Version {
            get {
                return ResourceManager.GetString("ApplicationDetailsPanel_RowHeaders_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Details.
        /// </summary>
        internal static string ApplicationDetailsPanel_Title {
            get {
                return ResourceManager.GetString("ApplicationDetailsPanel_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application licence only allows a maximum of {0} concurrent users, but the server licence allows {1}..
        /// </summary>
        internal static string LicensingStatusPanel_ConcurrentUsers_Exceeded {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_ConcurrentUsers_Exceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application licence allows {0} concurrent users..
        /// </summary>
        internal static string LicensingStatusPanel_ConcurrentUsers_Valid {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_ConcurrentUsers_Valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User group {0} has {1} members, which is more than the licensed value of {1}..
        /// </summary>
        internal static string LicensingStatusPanel_GroupMembership_Exceeded {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_GroupMembership_Exceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User group {0} has {1} members, which is less than the licensed value of {1}..
        /// </summary>
        internal static string LicensingStatusPanel_GroupMembership_Valid {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_GroupMembership_Valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application is licensed to {0}..
        /// </summary>
        internal static string LicensingStatusPanel_LicensedTo {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_LicensedTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The licence expired {0} days ago..
        /// </summary>
        internal static string LicensingStatusPanel_LicenseExpiredXXXXDaysAgo {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_LicenseExpiredXXXXDaysAgo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The licence expires in {0} days..
        /// </summary>
        internal static string LicensingStatusPanel_LicenseExpiresInXXXXDays {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_LicenseExpiresInXXXXDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maintenance expired {0} days ago..
        /// </summary>
        internal static string LicensingStatusPanel_MaintenanceExpiredXXXXDaysAgo {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_MaintenanceExpiredXXXXDaysAgo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maintenance expires in {0} days..
        /// </summary>
        internal static string LicensingStatusPanel_MaintenanceExpiresInXXXXDays {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_MaintenanceExpiresInXXXXDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application licence only allows a maximum of {0} named users, but the server licence allows {1}..
        /// </summary>
        internal static string LicensingStatusPanel_NamedUsers_Exceeded {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_NamedUsers_Exceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application licence allows {0} named users..
        /// </summary>
        internal static string LicensingStatusPanel_NamedUsers_Valid {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_NamedUsers_Valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license is not valid on this server..
        /// </summary>
        internal static string LicensingStatusPanel_NotValidForThisServer {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_NotValidForThisServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license is not valid for server version {0}..
        /// </summary>
        internal static string LicensingStatusPanel_NotValidInThisServerVersion {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_NotValidInThisServerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license is not valid in vault {0}..
        /// </summary>
        internal static string LicensingStatusPanel_NotValidInThisVault {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_NotValidInThisVault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application licence only allows a maximum of {0} read-only users, but the server licence allows {1}..
        /// </summary>
        internal static string LicensingStatusPanel_ReadOnly_Exceeded {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_ReadOnly_Exceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application licence allows {0} read-only users..
        /// </summary>
        internal static string LicensingStatusPanel_ReadOnlyUsers_Valid {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_ReadOnlyUsers_Valid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Licensing Status.
        /// </summary>
        internal static string LicensingStatusPanel_Title {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license is valid on this server..
        /// </summary>
        internal static string LicensingStatusPanel_ValidForThisServer {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_ValidForThisServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license is valid for this server version..
        /// </summary>
        internal static string LicensingStatusPanel_ValidInThisServerVersion {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_ValidInThisServerVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license is valid for this vault GUID..
        /// </summary>
        internal static string LicensingStatusPanel_ValidInThisVault {
            get {
                return ResourceManager.GetString("LicensingStatusPanel_ValidInThisVault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application&apos;s license is badly formatted..
        /// </summary>
        internal static string MFApplicationLicenseStatusFormatError {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusFormatError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application&apos;s license has expired, but is within a grace period..
        /// </summary>
        internal static string MFApplicationLicenseStatusGracePeriod {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusGracePeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application has a license installed..
        /// </summary>
        internal static string MFApplicationLicenseStatusInstalled {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application&apos;s license is invalid..
        /// </summary>
        internal static string MFApplicationLicenseStatusInvalid {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No license is installed for this application..
        /// </summary>
        internal static string MFApplicationLicenseStatusNotInstalled {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application does not require a license..
        /// </summary>
        internal static string MFApplicationLicenseStatusNotNeeded {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusNotNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application has a trial license installed..
        /// </summary>
        internal static string MFApplicationLicenseStatusTrial {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusTrial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application&apos;s licensing status is unknown..
        /// </summary>
        internal static string MFApplicationLicenseStatusUnknown {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusUnknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application&apos;s license is valid..
        /// </summary>
        internal static string MFApplicationLicenseStatusValid {
            get {
                return ResourceManager.GetString("MFApplicationLicenseStatusValid", resourceCulture);
            }
        }
    }
}
