# This is a basic workflow that is manually triggered

name: Manual publish

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
     versionSuffix:
        description: 'Version suffix'
        required: false
        default: ''

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    timeout-minutes: 10
    runs-on: 'windows-2019'

    
    steps:
    - uses: actions/checkout@v2
    - with: 
        fetch-depth: 0

    - name: versionSuffix
      shell: pwsh
      run: |
        If([string]::IsNullOrEmpty('${{ github.event.inputs.versionSuffix }}'))
        {
            If('${{ github.ref_name }}' -eq 'release')
            {
                $versionSuffix = ''
            }else{
                $versionSuffix = '-' + ('${{ github.ref_name }}' -replace '[^a-zA-Z0-9]','-')
            }
        }else{
            $versionSuffix = '-' + ('${{ github.event.inputs.versionSuffix }}' -replace '[^a-zA-Z0-9]','-')
        }
        echo "versionSuffix=$versionSuffix" | Out-File -FilePath $Env:GITHUB_ENV -Append

    - name: Get version number
      shell: pwsh
      run: |
        $versionNumber = (Get-Date -Format "yy.M.0.${{ github.run_number }}") + "${{ env.versionSuffix }}"
        echo "versionNumber=$versionNumber" | Out-File -FilePath $Env:GITHUB_ENV -Append

    - name: Get changes since last tag
      shell: pwsh
      run: |
        $lastTag = git describe --tags --abbrev=0
        $cmd = "git log --pretty=""format:%h %an %s"" --max-count=50 --no-merges $lastTag..@"
        $changes = cmd /c $cmd
        Add-Content -Path "MFiles.VAF.Extensions\nuget-readme.md" -Value " ($lastTag)" -NoNewline
        Add-Content -Path "MFiles.VAF.Extensions\nuget-readme.md" -Value "`r`n`r`n" -NoNewline
        Add-Content -Path "MFiles.VAF.Extensions\nuget-readme.md" -Value $changes -NoNewline

    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup dot net
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
      
    - name: Create nuget package
      run: dotnet pack ./MFiles.VAF.Extensions/MFiles.VAF.Extensions.csproj --configuration Release -p:Version=${{ env.versionNumber }}

    - name: Push with dotnet
      run: dotnet nuget push ./MFiles.VAF.Extensions/bin/Release/MFiles.VAF.Extensions.${{ env.versionNumber }}.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
