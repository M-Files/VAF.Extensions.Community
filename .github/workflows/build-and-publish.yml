name: Build and publish

on:
  push:
    branches: [ testing-actions ]
    
jobs:
  build:
    timeout-minutes: 10
    runs-on: 'windows-latest'

    
    steps:
    - uses: actions/checkout@v2

    - name: versionSuffix
      run: |
        if github.ref == 'release'
          echo "versionSuffix=-preview" >> $GITHUB_ENV
        else
          echo "versionSuffix=" >> $GITHUB_ENV
        fi

    - name: Get version number
      shell: pwsh
      run: |
        $versionNumber = Get-Date -Format "yy.M.${{ github.run_number }}.0{{ env.versionSuffix }}"
        echo "versionNumber=$versionNumber" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup dot net
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Restore NuGet packages
      run: nuget restore MFiles.VAF.Extensions.sln

    - name: Build solution and create nuget package
      run: dotnet build MFiles.VAF.Extensions.sln --configuration Release /p:Version=${{ env.versionNumber }}

# Tests cannot be run as MFAPI is not installed.
#    - name: Test
#      run: dotnet test --no-restore --verbosity normal

    - name: Push with dotnet
      run: dotnet nuget push MFiles.VAF.Extensions/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
    - name: Create release
      id: createRelease
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.versionNumber }}
        release_name: ${{ env.versionNumber }}
        draft: false
        prerelease: false

    - name: Upload asset
      id: uploadAsset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.createRelease.outputs.upload_url }}
        asset_path: ./MFiles.VAF.Extensions/bin/Release/MFiles.VAF.Extensions.${{ env.versionNumber }}.nupkg
        asset_name: MFiles.VAF.Extensions.nupkg
        asset_content_type: application/zip
