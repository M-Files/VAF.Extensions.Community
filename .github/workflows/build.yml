name: Manual publish

on:
  workflow_dispatch:
    inputs:
     versionSuffix:
        description: 'Version suffix'
        required: false
        default: 'warning'

jobs:
  build:
    timeout-minutes: 10
    runs-on: 'windows-2019'

    
    steps:
    - uses: actions/checkout@v2

    - name: versionSuffix
      shell: pwsh
      run: |
        If([string]::IsNullOrEmpty('${{ github.event.inputs.versionSuffix }}')
        {
            $versionSuffix = '${{ github.ref_name }}' -replace '[^a-zA-Z0-9]','-'
            If($versionSuffix -eq 'release')
            {
                $versionSuffix = ''
            }
        }else{
            $versionSuffix = '${{ github.event.inputs.versionSuffix }}' -replace '[^a-zA-Z0-9]','-'
        }
        echo "versionSuffix=$versionSuffix" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Get version number
      shell: pwsh
      run: |
        $versionNumber = Get-Date -Format "yy.M.${{ github.run_number }}${{ env.versionSuffix }}"
        echo "versionNumber=$versionNumber" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup dot net
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
      
    - name: Create nuget package
      run: dotnet pack ./MFiles.VAF.Extensions/MFiles.VAF.Extensions.csproj --configuration Release -p:Version=${{ env.versionNumber }}

    - name: Push with dotnet
      run: dotnet nuget push ./MFiles.VAF.Extensions/bin/Release/MFiles.VAF.Extensions.${{ env.versionNumber }}.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

# Tests cannot be run as MFAPI is not installed.
#    - name: Test
#      run: dotnet test --no-restore --verbosity normal